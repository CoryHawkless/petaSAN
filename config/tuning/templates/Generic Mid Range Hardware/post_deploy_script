#! /bin/bash

cat << EOF  >  /etc/udev/rules.d/90-petasan-disk.rules

# ------ NVME ---------
#ACTION=="add|change", KERNEL=="nvme*[0-9]n*[0-9]", ATTR{queue/read_ahead_kb}="16"
ACTION=="add|change", KERNEL=="nvme*", ENV{DEVTYPE}=="disk", ATTR{queue/read_ahead_kb}="16"
ACTION=="add|change", KERNEL=="nvme*", ENV{DEVTYPE}=="disk", ATTR{queue/nr_requests}="1024"
#ACTION=="add|change", KERNEL=="nvme*", ENV{DEVTYPE}=="disk", ATTR{queue/scheduler}="noop"

# ------ SSDs ---------
ACTION=="add|change", KERNEL=="sd[a-z]|xvd[a-z]",ENV{DEVTYPE}=="disk",ATTR{queue/rotational}=="0", ATTR{queue/read_ahead_kb}="32"
ACTION=="add|change", KERNEL=="sd[a-z]|xvd[a-z]",ENV{DEVTYPE}=="disk",ATTR{queue/rotational}=="0", ATTR{queue/nr_requests}="1024"
ACTION=="add|change", KERNEL=="sd[a-z]|xvd[a-z]",ENV{DEVTYPE}=="disk",ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="noop"


# ------ Spinning ---------
ACTION=="add|change", KERNEL=="sd[a-z]|xvd[a-z]",ENV{DEVTYPE}=="disk",ATTR{queue/rotational}=="1", ATTR{queue/read_ahead_kb}="1024"
ACTION=="add|change", KERNEL=="sd[a-z]|xvd[a-z]",ENV{DEVTYPE}=="disk",ATTR{queue/rotational}=="1", ATTR{queue/nr_requests}="1024"
# use CFQ scheduler to set priorities on client and recovery I/O threads
ACTION=="add|change", KERNEL=="sd[a-z]|xvd[a-z]",ENV{DEVTYPE}=="disk",ATTR{queue/rotational}=="1", ATTR{queue/scheduler}="cfq"

EOF

for d in $(find /sys/block/* | grep -E '\/nvme' ) ; do
  # ------ NVME ---------
  echo 16 > $d/queue/read_ahead_kb
  echo 1024 > $d/queue/nr_requests
  #echo "noop" > $d/queue/scheduler
done

for d in $(find /sys/block/* | grep -E '\/(sd|xvd)' ) ; do
  SPINNING=$(head -n 1 $d/queue/rotational)
  if [ "$SPINNING" -eq "0" ]
  then
    # ------ SSD ---------
    echo 32 > $d/queue/read_ahead_kb
    echo 1024 > $d/queue/nr_requests
    echo "noop" > $d/queue/scheduler
  else
    # ------ Spinning ---------
    echo 1024 > $d/queue/read_ahead_kb
    echo 1024 > $d/queue/nr_requests
    echo "cfq"  > $d/queue/scheduler
  fi
done

cat << EOF  >  /etc/sysctl.conf
kernel.pid_max=4194303
fs.file-max=26234859
#vm.swappiness=10
#vm.vfs_cache_pressure=1
#vm.min_free_kbytes = 4194304
#vm.zone_reclaim_mode=1
net.core.rmem_max=56623104
net.core.wmem_max=56623104
net.core.rmem_default=56623104
net.core.wmem_default=56623104
net.core.optmem_max=40960
net.ipv4.tcp_rmem=4096 87380 56623104
net.ipv4.tcp_wmem=4096 65536 56623104
net.core.somaxconn=1024
net.core.netdev_max_backlog=50000 
net.ipv4.tcp_max_syn_backlog=30000 
net.ipv4.tcp_max_tw_buckets=2000000 
net.ipv4.tcp_tw_reuse=1 
net.ipv4.tcp_tw_recycle=1 
net.ipv4.tcp_fin_timeout=10 
net.ipv4.tcp_slow_start_after_idle=0
net.ipv4.udp_rmem_min=8192 
net.ipv4.udp_wmem_min=8192 
net.ipv4.conf.all.send_redirects=0 
net.ipv4.conf.all.accept_redirects=0 
net.ipv4.conf.all.accept_source_route=0
# mtu discovery
net.ipv4.tcp_mtu_probing=2
#net.ipv4.ip_no_pmtu_disc=1
# required for move path
net.ipv4.conf.all.promote_secondaries=1
EOF

sysctl --system


# --- cpu states ----------
if [ -d  /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor ]; then
  sleep 5
  echo performance | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
fi
if [ -d  /sys/devices/system/cpu/intel_pstate/min_perf_pct ]; then
  sleep 5
  echo 100 > /sys/devices/system/cpu/intel_pstate/min_perf_pct
fi

cat << EOF   >  /etc/rc.local
#!/bin/sh -e
if [ -d  /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor ]; then
  sleep 5
  echo performance | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
fi
if [ -d  /sys/devices/system/cpu/intel_pstate/min_perf_pct ]; then
  sleep 5
  echo 100 > /sys/devices/system/cpu/intel_pstate/min_perf_pct
fi
exit 0
EOF
chown root /etc/rc.local
chmod 755 /etc/rc.local